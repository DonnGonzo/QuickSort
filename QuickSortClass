public class Project3 {

	private int arrSize = 0;
	private int[] arr = new int[arrSize + 1] ;
	private int left = 0;
	private int right = arr.length - 1;
	private static int swap = 0;
	private static int comp = 0;
	

	
	public void Insert(int Value)
	{
		if(arr[arr.length-1] > 0)
		{
			arrSize = arr.length + 1;
			int[] tempArray = Arrays.copyOf(arr, arrSize);
			arr = Arrays.copyOf(tempArray, tempArray.length);
		}
		arr[arr.length-1] = Value;
		for(int i:arr)
    	{    
          System.out.print(i+" ");    
    	}
		System.out.println("\n");
		
	/*	arrSize = arr.length + 1;
		int[] tempArray = Arrays.copyOf(arr, arrSize);
		arr = Arrays.copyOf(tempArray, tempArray.length);
		*/
		
	}
	 
	 
	 
	public String toString()
	 {
		String strArr = "";
		for(int i=0; i<=arr.length;i++)
    	{    
			if(i == arr.length)
			{
				return strArr;
			}			
          strArr= strArr+arr[i]+"\n";
      	}
		
		return strArr;
		 
	 }
	 
	 
	public int Count()
	 {
	 
		
		int num = arr.length;		
		
			return num;
		 
	 }
	 
		
	
	public static void swap(int[] arr,int a,int b)
	 {
		swap++;
	    int temp=arr[a];
	    arr[a]=arr[b];
	    arr[b]=temp;    

	 }
	 void quicksortfunc(int[] arr,int left,int right)
	 {
		
	     int size=right-left+1;
	     if(size<=3)
	         BubbleSort(arr,left,right);
	     else
	     {
	     int pivot=medianof3(arr,left,right);
	     int p_index=partitionfunc(arr,left,right,pivot);
	     quicksortfunc(arr,left,p_index-1);
	     quicksortfunc(arr,p_index+1,right);
	     }
	 }
	 public static int medianof3(int[] arr,int left,int right)
	 {
	  int mid=(left+right)/2;
	  comp++;
	  if(arr[mid]<arr[left])
	   swap(arr,mid,left);
	  
	  comp++;
	  if(arr[right]<arr[left])
	  swap(arr,right,left);
	  
	  comp++;
	  if(arr[mid]>arr[right])
	  swap(arr,mid,right);
	  swap(arr,mid,right-1);
	  
	  comp++;
	  return arr[right-1];
	 }
	 int partitionfunc(int[] arr, int left,int right,int pivot)
	 {
	     int i=left+1;
	     int j=right-2;
	     while(i<j)
	     {
	     while(arr[i]<pivot)
	         i++;
	     while(arr[j]>pivot)
	         j--;
	     if(i<j)
	         swap(arr,i,j);
	     	comp++;
	     }
	     swap(arr,i,right-1);
	     	comp++;
	             return i;
	 }
	 public static void BubbleSort(int[] arr,int left,int right)
	 {
	     int size=right-left+1;
	     if(size<=1)
	         return;
	     if(size==2)
	     {
	         if(arr[right]<arr[left])
	             swap(arr,left,right);
	         comp++;
	             return;
	     }
	     else
	     {
	     if(arr[right-1]<arr[left])
	         swap(arr,right-1,left);
	     	comp++;
	     if(arr[right]<arr[left])
	         swap(arr,right,left);
	     	comp++;
	     if(arr[right-1]>arr[right])
	         swap(arr,right-1,right);
	     	comp++;
	     }
	 }
	
	 public void QuickSort()
	 {
		 right = arr.length-1;
		 quicksortfunc(arr, left, right);
		 
	 }
	 
	 public String sortStats()
	 {
		 int swap1 = swap;
		 int comp1 = comp;
		 String stats = "Swaps "+swap1 + "\nComparisons " +comp1;
		 
		 
		 
		 return stats;
	 }
